// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace WebKit {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;
	using static GLib.AbiStructExtension;

#region Autogenerated code
	public partial class URISchemeRequest : GLib.Object {

		public URISchemeRequest (IntPtr raw) : base(raw) {}

		protected URISchemeRequest() : base(IntPtr.Zero)
		{
			CreateNativeObject (new string [0], new GLib.Value [0]);
		}


		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _class_abi = null;
		static public unsafe new GLib.AbiStruct class_abi {
			get {
				if (_class_abi == null)
					_class_abi = new GLib.AbiStruct (new List<GLib.AbiField>{ 
						new GLib.AbiField("_webkit_reserved0"
							, GLib.Object.class_abi.Fields
							, (uint) sizeof( IntPtr ) // _webkit_reserved0
							, null
							, "_webkit_reserved1"
							, (uint) sizeof(IntPtr)
							, 0
							),
						new GLib.AbiField("_webkit_reserved1"
							, -1
							, (uint) sizeof( IntPtr ) // _webkit_reserved1
							, "_webkit_reserved0"
							, "_webkit_reserved2"
							, (uint) sizeof(IntPtr)
							, 0
							),
						new GLib.AbiField("_webkit_reserved2"
							, -1
							, (uint) sizeof( IntPtr ) // _webkit_reserved2
							, "_webkit_reserved1"
							, "_webkit_reserved3"
							, (uint) sizeof(IntPtr)
							, 0
							),
						new GLib.AbiField("_webkit_reserved3"
							, -1
							, (uint) sizeof( IntPtr ) // _webkit_reserved3
							, "_webkit_reserved2"
							, null
							, (uint) sizeof(IntPtr)
							, 0
							),
					});

				return _class_abi;
			}
		}


		// End of the ABI representation.

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_webkit_uri_scheme_request_get_type();
		static d_webkit_uri_scheme_request_get_type webkit_uri_scheme_request_get_type = FuncLoader.LoadFunction<d_webkit_uri_scheme_request_get_type>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Webkit), "webkit_uri_scheme_request_get_type"));

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = webkit_uri_scheme_request_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_webkit_uri_scheme_request_finish(IntPtr raw, IntPtr stream, long stream_length, IntPtr content_type);
		static d_webkit_uri_scheme_request_finish webkit_uri_scheme_request_finish = FuncLoader.LoadFunction<d_webkit_uri_scheme_request_finish>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Webkit), "webkit_uri_scheme_request_finish"));

		public void Finish(GLib.InputStream stream, long stream_length, string content_type) {
			IntPtr native_content_type = GLib.Marshaller.StringToPtrGStrdup (content_type);
			webkit_uri_scheme_request_finish(Handle, stream == null ? IntPtr.Zero : stream.Handle, stream_length, native_content_type);
			GLib.Marshaller.Free (native_content_type);
		}

		public void Finish(GLib.InputStream stream, long stream_length) {
			Finish (stream, stream_length, null);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_webkit_uri_scheme_request_finish_error(IntPtr raw, IntPtr error);
		static d_webkit_uri_scheme_request_finish_error webkit_uri_scheme_request_finish_error = FuncLoader.LoadFunction<d_webkit_uri_scheme_request_finish_error>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Webkit), "webkit_uri_scheme_request_finish_error"));

		public void FinishError(IntPtr error) {
			webkit_uri_scheme_request_finish_error(Handle, error);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_webkit_uri_scheme_request_get_path(IntPtr raw);
		static d_webkit_uri_scheme_request_get_path webkit_uri_scheme_request_get_path = FuncLoader.LoadFunction<d_webkit_uri_scheme_request_get_path>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Webkit), "webkit_uri_scheme_request_get_path"));

		public string Path { 
			get {
				IntPtr raw_ret = webkit_uri_scheme_request_get_path(Handle);
				string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_webkit_uri_scheme_request_get_scheme(IntPtr raw);
		static d_webkit_uri_scheme_request_get_scheme webkit_uri_scheme_request_get_scheme = FuncLoader.LoadFunction<d_webkit_uri_scheme_request_get_scheme>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Webkit), "webkit_uri_scheme_request_get_scheme"));

		public string Scheme { 
			get {
				IntPtr raw_ret = webkit_uri_scheme_request_get_scheme(Handle);
				string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_webkit_uri_scheme_request_get_uri(IntPtr raw);
		static d_webkit_uri_scheme_request_get_uri webkit_uri_scheme_request_get_uri = FuncLoader.LoadFunction<d_webkit_uri_scheme_request_get_uri>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Webkit), "webkit_uri_scheme_request_get_uri"));

		public string Uri { 
			get {
				IntPtr raw_ret = webkit_uri_scheme_request_get_uri(Handle);
				string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_webkit_uri_scheme_request_get_web_view(IntPtr raw);
		static d_webkit_uri_scheme_request_get_web_view webkit_uri_scheme_request_get_web_view = FuncLoader.LoadFunction<d_webkit_uri_scheme_request_get_web_view>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Webkit), "webkit_uri_scheme_request_get_web_view"));

		public WebKit.WebView WebView { 
			get {
				IntPtr raw_ret = webkit_uri_scheme_request_get_web_view(Handle);
				WebKit.WebView ret = GLib.Object.GetObject(raw_ret) as WebKit.WebView;
				return ret;
			}
		}


		static URISchemeRequest ()
		{
			GtkSharp.WebkitGtkSharp.ObjectManager.Initialize ();
		}

		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _abi_info = null;
		static public unsafe new GLib.AbiStruct abi_info {
			get {
				if (_abi_info == null)
					_abi_info = new GLib.AbiStruct (new List<GLib.AbiField>{ 
						new GLib.AbiField("priv"
							, GLib.Object.abi_info.Fields
							, (uint) sizeof( IntPtr ) // priv
							, null
							, null
							, (uint) sizeof(IntPtr)
							, 0
							),
					});

				return _abi_info;
			}
		}


		// End of the ABI representation.

#endregion
	}
}
