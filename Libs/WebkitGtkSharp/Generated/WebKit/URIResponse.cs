// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace WebKit {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;
	using static GLib.AbiStructExtension;

#region Autogenerated code
	public partial class URIResponse : GLib.Object {

		public URIResponse (IntPtr raw) : base(raw) {}

		protected URIResponse() : base(IntPtr.Zero)
		{
			CreateNativeObject (new string [0], new GLib.Value [0]);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate ulong d_webkit_uri_response_get_content_length(IntPtr raw);
		static d_webkit_uri_response_get_content_length webkit_uri_response_get_content_length = FuncLoader.LoadFunction<d_webkit_uri_response_get_content_length>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Webkit), "webkit_uri_response_get_content_length"));

		[GLib.Property ("content-length")]
		public ulong ContentLength {
			get  {
				ulong raw_ret = webkit_uri_response_get_content_length(Handle);
				ulong ret = raw_ret;
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_webkit_uri_response_get_mime_type(IntPtr raw);
		static d_webkit_uri_response_get_mime_type webkit_uri_response_get_mime_type = FuncLoader.LoadFunction<d_webkit_uri_response_get_mime_type>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Webkit), "webkit_uri_response_get_mime_type"));

		[GLib.Property ("mime-type")]
		public string MimeType {
			get  {
				IntPtr raw_ret = webkit_uri_response_get_mime_type(Handle);
				string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate uint d_webkit_uri_response_get_status_code(IntPtr raw);
		static d_webkit_uri_response_get_status_code webkit_uri_response_get_status_code = FuncLoader.LoadFunction<d_webkit_uri_response_get_status_code>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Webkit), "webkit_uri_response_get_status_code"));

		[GLib.Property ("status-code")]
		public uint StatusCode {
			get  {
				uint raw_ret = webkit_uri_response_get_status_code(Handle);
				uint ret = raw_ret;
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_webkit_uri_response_get_suggested_filename(IntPtr raw);
		static d_webkit_uri_response_get_suggested_filename webkit_uri_response_get_suggested_filename = FuncLoader.LoadFunction<d_webkit_uri_response_get_suggested_filename>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Webkit), "webkit_uri_response_get_suggested_filename"));

		[GLib.Property ("suggested-filename")]
		public string SuggestedFilename {
			get  {
				IntPtr raw_ret = webkit_uri_response_get_suggested_filename(Handle);
				string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_webkit_uri_response_get_uri(IntPtr raw);
		static d_webkit_uri_response_get_uri webkit_uri_response_get_uri = FuncLoader.LoadFunction<d_webkit_uri_response_get_uri>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Webkit), "webkit_uri_response_get_uri"));

		[GLib.Property ("uri")]
		public string Uri {
			get  {
				IntPtr raw_ret = webkit_uri_response_get_uri(Handle);
				string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
				return ret;
			}
		}


		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _class_abi = null;
		static public unsafe new GLib.AbiStruct class_abi {
			get {
				if (_class_abi == null)
					_class_abi = new GLib.AbiStruct (new List<GLib.AbiField>{ 
						new GLib.AbiField("_webkit_reserved0"
							, GLib.Object.class_abi.Fields
							, (uint) sizeof( IntPtr ) // _webkit_reserved0
							, null
							, "_webkit_reserved1"
							, (uint) sizeof(IntPtr)
							, 0
							),
						new GLib.AbiField("_webkit_reserved1"
							, -1
							, (uint) sizeof( IntPtr ) // _webkit_reserved1
							, "_webkit_reserved0"
							, "_webkit_reserved2"
							, (uint) sizeof(IntPtr)
							, 0
							),
						new GLib.AbiField("_webkit_reserved2"
							, -1
							, (uint) sizeof( IntPtr ) // _webkit_reserved2
							, "_webkit_reserved1"
							, "_webkit_reserved3"
							, (uint) sizeof(IntPtr)
							, 0
							),
						new GLib.AbiField("_webkit_reserved3"
							, -1
							, (uint) sizeof( IntPtr ) // _webkit_reserved3
							, "_webkit_reserved2"
							, null
							, (uint) sizeof(IntPtr)
							, 0
							),
					});

				return _class_abi;
			}
		}


		// End of the ABI representation.

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_webkit_uri_response_get_type();
		static d_webkit_uri_response_get_type webkit_uri_response_get_type = FuncLoader.LoadFunction<d_webkit_uri_response_get_type>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Webkit), "webkit_uri_response_get_type"));

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = webkit_uri_response_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}


		static URIResponse ()
		{
			GtkSharp.WebkitGtkSharp.ObjectManager.Initialize ();
		}

		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _abi_info = null;
		static public unsafe new GLib.AbiStruct abi_info {
			get {
				if (_abi_info == null)
					_abi_info = new GLib.AbiStruct (new List<GLib.AbiField>{ 
						new GLib.AbiField("priv"
							, GLib.Object.abi_info.Fields
							, (uint) sizeof( IntPtr ) // priv
							, null
							, null
							, (uint) sizeof(IntPtr)
							, 0
							),
					});

				return _abi_info;
			}
		}


		// End of the ABI representation.

#endregion
	}
}
