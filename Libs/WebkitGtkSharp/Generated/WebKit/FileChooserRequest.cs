// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace WebKit {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;
	using static GLib.AbiStructExtension;

#region Autogenerated code
	public partial class FileChooserRequest : GLib.Object {

		public FileChooserRequest (IntPtr raw) : base(raw) {}

		protected FileChooserRequest() : base(IntPtr.Zero)
		{
			CreateNativeObject (new string [0], new GLib.Value [0]);
		}

		[GLib.Property ("filter")]
		public Gtk.FileFilter Filter {
			get {
				GLib.Value val = GetProperty ("filter");
				Gtk.FileFilter ret = (Gtk.FileFilter) val;
				val.Dispose ();
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate bool d_webkit_file_chooser_request_get_select_multiple(IntPtr raw);
		static d_webkit_file_chooser_request_get_select_multiple webkit_file_chooser_request_get_select_multiple = FuncLoader.LoadFunction<d_webkit_file_chooser_request_get_select_multiple>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Webkit), "webkit_file_chooser_request_get_select_multiple"));

		[GLib.Property ("select-multiple")]
		public bool SelectMultiple {
			get  {
				bool raw_ret = webkit_file_chooser_request_get_select_multiple(Handle);
				bool ret = raw_ret;
				return ret;
			}
		}


		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _class_abi = null;
		static public unsafe new GLib.AbiStruct class_abi {
			get {
				if (_class_abi == null)
					_class_abi = new GLib.AbiStruct (new List<GLib.AbiField>{ 
						new GLib.AbiField("_webkit_reserved0"
							, GLib.Object.class_abi.Fields
							, (uint) sizeof( IntPtr ) // _webkit_reserved0
							, null
							, "_webkit_reserved1"
							, (uint) sizeof(IntPtr)
							, 0
							),
						new GLib.AbiField("_webkit_reserved1"
							, -1
							, (uint) sizeof( IntPtr ) // _webkit_reserved1
							, "_webkit_reserved0"
							, "_webkit_reserved2"
							, (uint) sizeof(IntPtr)
							, 0
							),
						new GLib.AbiField("_webkit_reserved2"
							, -1
							, (uint) sizeof( IntPtr ) // _webkit_reserved2
							, "_webkit_reserved1"
							, "_webkit_reserved3"
							, (uint) sizeof(IntPtr)
							, 0
							),
						new GLib.AbiField("_webkit_reserved3"
							, -1
							, (uint) sizeof( IntPtr ) // _webkit_reserved3
							, "_webkit_reserved2"
							, null
							, (uint) sizeof(IntPtr)
							, 0
							),
					});

				return _class_abi;
			}
		}


		// End of the ABI representation.

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_webkit_file_chooser_request_get_type();
		static d_webkit_file_chooser_request_get_type webkit_file_chooser_request_get_type = FuncLoader.LoadFunction<d_webkit_file_chooser_request_get_type>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Webkit), "webkit_file_chooser_request_get_type"));

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = webkit_file_chooser_request_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_webkit_file_chooser_request_cancel(IntPtr raw);
		static d_webkit_file_chooser_request_cancel webkit_file_chooser_request_cancel = FuncLoader.LoadFunction<d_webkit_file_chooser_request_cancel>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Webkit), "webkit_file_chooser_request_cancel"));

		public void Cancel() {
			webkit_file_chooser_request_cancel(Handle);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_webkit_file_chooser_request_get_mime_types_filter(IntPtr raw);
		static d_webkit_file_chooser_request_get_mime_types_filter webkit_file_chooser_request_get_mime_types_filter = FuncLoader.LoadFunction<d_webkit_file_chooser_request_get_mime_types_filter>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Webkit), "webkit_file_chooser_request_get_mime_types_filter"));

		public Gtk.FileFilter MimeTypesFilter { 
			get {
				IntPtr raw_ret = webkit_file_chooser_request_get_mime_types_filter(Handle);
				Gtk.FileFilter ret = GLib.Object.GetObject(raw_ret) as Gtk.FileFilter;
				return ret;
			}
		}


		static FileChooserRequest ()
		{
			GtkSharp.WebkitGtkSharp.ObjectManager.Initialize ();
		}

		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _abi_info = null;
		static public unsafe new GLib.AbiStruct abi_info {
			get {
				if (_abi_info == null)
					_abi_info = new GLib.AbiStruct (new List<GLib.AbiField>{ 
						new GLib.AbiField("priv"
							, GLib.Object.abi_info.Fields
							, (uint) sizeof( IntPtr ) // priv
							, null
							, null
							, (uint) sizeof(IntPtr)
							, 0
							),
					});

				return _abi_info;
			}
		}


		// End of the ABI representation.

#endregion
	}
}
