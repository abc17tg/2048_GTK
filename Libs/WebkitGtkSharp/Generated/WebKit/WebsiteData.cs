// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace WebKit {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct WebsiteData : IEquatable<WebsiteData> {


		public static WebKit.WebsiteData Zero = new WebKit.WebsiteData ();

		public static WebKit.WebsiteData New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return WebKit.WebsiteData.Zero;
			return (WebKit.WebsiteData) Marshal.PtrToStructure (raw, typeof (WebKit.WebsiteData));
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_webkit_website_data_get_type();
		static d_webkit_website_data_get_type webkit_website_data_get_type = FuncLoader.LoadFunction<d_webkit_website_data_get_type>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Webkit), "webkit_website_data_get_type"));

		public static GLib.GType GType { 
			get {
				IntPtr raw_ret = webkit_website_data_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_webkit_website_data_get_name(IntPtr raw);
		static d_webkit_website_data_get_name webkit_website_data_get_name = FuncLoader.LoadFunction<d_webkit_website_data_get_name>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Webkit), "webkit_website_data_get_name"));

		public string Name { 
			get {
				IntPtr this_as_native = System.Runtime.InteropServices.Marshal.AllocHGlobal (System.Runtime.InteropServices.Marshal.SizeOf<WebKit.WebsiteData>());
				System.Runtime.InteropServices.Marshal.StructureToPtr (this, this_as_native, false);
				IntPtr raw_ret = webkit_website_data_get_name(this_as_native);
				string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
				ReadNative (this_as_native, ref this);
				System.Runtime.InteropServices.Marshal.FreeHGlobal (this_as_native);
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate ulong d_webkit_website_data_get_size(IntPtr raw, int types);
		static d_webkit_website_data_get_size webkit_website_data_get_size = FuncLoader.LoadFunction<d_webkit_website_data_get_size>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Webkit), "webkit_website_data_get_size"));

		public ulong GetSize(WebKit.WebsiteDataTypes types) {
			IntPtr this_as_native = System.Runtime.InteropServices.Marshal.AllocHGlobal (System.Runtime.InteropServices.Marshal.SizeOf<WebKit.WebsiteData>());
			System.Runtime.InteropServices.Marshal.StructureToPtr (this, this_as_native, false);
			ulong raw_ret = webkit_website_data_get_size(this_as_native, (int) types);
			ulong ret = raw_ret;
			ReadNative (this_as_native, ref this);
			System.Runtime.InteropServices.Marshal.FreeHGlobal (this_as_native);
			return ret;
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate int d_webkit_website_data_get_types(IntPtr raw);
		static d_webkit_website_data_get_types webkit_website_data_get_types = FuncLoader.LoadFunction<d_webkit_website_data_get_types>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Webkit), "webkit_website_data_get_types"));

		public WebKit.WebsiteDataTypes Types { 
			get {
				IntPtr this_as_native = System.Runtime.InteropServices.Marshal.AllocHGlobal (System.Runtime.InteropServices.Marshal.SizeOf<WebKit.WebsiteData>());
				System.Runtime.InteropServices.Marshal.StructureToPtr (this, this_as_native, false);
				int raw_ret = webkit_website_data_get_types(this_as_native);
				WebKit.WebsiteDataTypes ret = (WebKit.WebsiteDataTypes) raw_ret;
				ReadNative (this_as_native, ref this);
				System.Runtime.InteropServices.Marshal.FreeHGlobal (this_as_native);
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_webkit_website_data_ref(IntPtr raw);
		static d_webkit_website_data_ref webkit_website_data_ref = FuncLoader.LoadFunction<d_webkit_website_data_ref>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Webkit), "webkit_website_data_ref"));

		public WebKit.WebsiteData Ref() {
			IntPtr this_as_native = System.Runtime.InteropServices.Marshal.AllocHGlobal (System.Runtime.InteropServices.Marshal.SizeOf<WebKit.WebsiteData>());
			System.Runtime.InteropServices.Marshal.StructureToPtr (this, this_as_native, false);
			IntPtr raw_ret = webkit_website_data_ref(this_as_native);
			WebKit.WebsiteData ret = WebKit.WebsiteData.New (raw_ret);
			ReadNative (this_as_native, ref this);
			System.Runtime.InteropServices.Marshal.FreeHGlobal (this_as_native);
			return ret;
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_webkit_website_data_unref(IntPtr raw);
		static d_webkit_website_data_unref webkit_website_data_unref = FuncLoader.LoadFunction<d_webkit_website_data_unref>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Webkit), "webkit_website_data_unref"));

		public void Unref() {
			IntPtr this_as_native = System.Runtime.InteropServices.Marshal.AllocHGlobal (System.Runtime.InteropServices.Marshal.SizeOf<WebKit.WebsiteData>());
			System.Runtime.InteropServices.Marshal.StructureToPtr (this, this_as_native, false);
			webkit_website_data_unref(this_as_native);
			ReadNative (this_as_native, ref this);
			System.Runtime.InteropServices.Marshal.FreeHGlobal (this_as_native);
		}

		static void ReadNative (IntPtr native, ref WebKit.WebsiteData target)
		{
			target = New (native);
		}

		public bool Equals (WebsiteData other)
		{
			return true;
		}

		public override bool Equals (object other)
		{
			return other is WebsiteData && Equals ((WebsiteData) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode ();
		}

		public static explicit operator GLib.Value (WebKit.WebsiteData boxed)
		{
			GLib.Value val = GLib.Value.Empty;
			val.Init (WebKit.WebsiteData.GType);
			val.Val = boxed;
			return val;
		}

		public static explicit operator WebKit.WebsiteData (GLib.Value val)
		{
			return (WebKit.WebsiteData) val.Val;
		}
#endregion
	}
}
